{"version":3,"sources":["../../src/pages/forgetpasssword/forgetpasssword.module.ts","../../src/pages/forgetpasssword/forgetpasssword.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ForgetpassswordPage } from './forgetpasssword';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ForgetpassswordPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ForgetpassswordPage),\r\n  ],\r\n})\r\nexport class ForgetpassswordPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgetpasssword/forgetpasssword.module.ts","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams,ToastController,LoadingController } from 'ionic-angular';\r\nimport { FormBuilder, Validators,FormGroup } from '@angular/forms';\r\nimport { AuthenticateProvider } from '../../providers/authenticate/authenticate';\r\nimport { LandingPage } from '../landing/landing'\r\n/**\r\n * Generated class for the ForgetpassswordPage page.\r\n *\r\n * See http://ionicframework.com/docs/components/#navigation for more info\r\n * on Ionic pages and navigation.\r\n */\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-forgetpasssword',\r\n  templateUrl: 'forgetpasssword.html',\r\n})\r\nexport class ForgetpassswordPage {\r\n\r\n\temail:any;\r\n\tcode:any;\r\n\tnewpass:any;\r\n\tconpass:any;\r\n\tforgetForm:FormGroup;\r\n  codee:any;\r\n  loading:any;\r\n  constructor(public navCtrl: NavController, \r\n  \tpublic navParams: NavParams,\r\n    public formBuilder: FormBuilder,\r\n    public authprovier: AuthenticateProvider,\r\n    public loadingCtrl:LoadingController,\r\n    public toastCtrl:ToastController) {\r\n\r\n    this.code=\"6465\";\r\n    let PASSWORD_REGEXP=/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{1,}$/i;  \r\n\r\n  \tthis.forgetForm = formBuilder.group({\r\n      code: ['', Validators.compose([Validators.maxLength(4), Validators.minLength(4), Validators.required])],\r\n      newpass: ['', Validators.compose([Validators.minLength(6), Validators.maxLength(20), Validators.pattern(PASSWORD_REGEXP),Validators.required])],\r\n      conpass: ['', Validators.compose([Validators.minLength(6), Validators.maxLength(20), Validators.required])],\r\n    },{validator: this.matchingPasswords('newpass', 'conpass')});\r\n\r\n\r\n  \tthis.email=this.navParams.get(\"email\");\r\n    this.code=this.forgetForm.controls['code'];\r\n    this.newpass=this.forgetForm.controls['newpass'];\r\n    this.conpass=this.forgetForm.controls['conpass'];\r\n    \r\n    \r\n  }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad ForgetpassswordPage');\r\n    \r\n  }\r\n\r\nforgetPassword(){\r\n  \r\n  this.loading=this.loadingCtrl.create({\r\n        spinner:'bubbles',\r\n        content:`Please wait..`\r\n      });\r\n  \r\n  this.loading.present();\r\n\tthis.authprovier.resetForgetPassword(this.email,this.code.value,this.newpass.value,this.conpass.value).subscribe(data=>{\r\n      this.loading.dismiss();\r\n\t\t\tconsole.log(data);\r\n\t\t\tif(data.json().msg==\"success\"){\r\n\t\t\t\t\tthis.showToast(data.json().msg_details);\r\n\t\t\t\t\tthis.navCtrl.push(LandingPage);\r\n\t\t\t}\r\n\r\n\t\t\tif(data.json().msg==\"error\"){\r\n\t\t\t\tthis.showToast(data.json().msg_details);\r\n\t\t\t}\r\n\t},\r\n\terr=>{\r\n      this.loading.dismiss();\r\n      this.showToast(\"Please try again later\");\r\n\t});\r\n\r\n}\r\n\r\n\r\n\r\nmatchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n    // TODO maybe use this https://github.com/yuyang041060120/ng2-validation#notequalto-1\r\n    return (group: FormGroup): {[key: string]: any} => {\r\n      let password = group.controls[passwordKey];\r\n      let confirmPassword = group.controls[confirmPasswordKey];\r\n\r\n      if (password.value !== confirmPassword.value) {\r\n        return {\r\n          mismatchedPasswords: true\r\n        };\r\n      }\r\n    }\r\n  }\r\n\r\n\r\nshowToast(msg:string) {\r\n    let toast = this.toastCtrl.create({\r\n      message: msg,\r\n      duration: 2000,\r\n      position: \"top\"\r\n    });\r\n\r\n    toast.present(toast);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/forgetpasssword/forgetpasssword.ts"],"sourceRoot":""}